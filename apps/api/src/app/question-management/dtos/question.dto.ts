import { QuestionTopic } from '../model/question-topic';
import { ApiProperty } from '@nestjs/swagger';

export class QuestionDto {
  @ApiProperty({
    description: 'the Id of the question',
    example: 'Autogenerated from uuid',
    required: true,
  })
  id?: string;
  @ApiProperty({
    description: 'The title of the question',
    example: 'InaccessibleObject exception means that the entity was not built',
    required: true,
  })
  title: string;
  @ApiProperty({
    description: 'The content of the question',
    example: 'What is a NullPointerException?',
    required: true,
  })
  postedBy: string;
  @ApiProperty({
    description: 'The content of the question',
    example:
      'What does NullPointerException mean? I keep getting this and I do not know what to do. please help me.',
    required: true,
  })
  content: string;
  @ApiProperty({
    description: 'The Topic of the answer',
    example: 'Either JavaScript or TypeScript',
    required: true,
  })
  topic: QuestionTopic;
  @ApiProperty({
    description: 'The rating value of the question',
    example:
      'Starts out at zero, increased and decreased by the votes of the users.',
    required: true,
  })
  rating: number;
  @ApiProperty({
    description: 'The creation date of the question',
    example: 'The exact time at which the question was created. Autogenerated.',
    required: true,
  })
  creationDate: string;
  @ApiProperty({
    description: 'The id of the user who owns this question',
    example: 'an ID generated beforehand',
    required: true,
  })
  userId: string;

  constructor(values: Partial<QuestionDto>) {
    if (values) {
      this.id = values.id;
      this.title = values.title;
      this.postedBy = values.postedBy;
      this.content = values.content;
      this.topic = values.topic;
      this.rating = values.rating;
      this.creationDate = values.creationDate;
      this.userId = values.userId;
    }
  }
}
